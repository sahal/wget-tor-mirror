#!/bin/bash
# check-signatures - checks cryptographic signatures of all downloaded files
# by Sahal Ansari github.com/sahal/
#
# Don't forget to import GPG/PGP keys before running this script
# torproject package signer key fingerprints: https://www.torproject.org/docs/signing-keys.html.en
# add the keys to the list yourself -- slave days are over
# please don't use 32bit keyIDs: https://evil32.com/
#wget --quiet -O - https://www.torproject.org/docs/signing-keys.html.en | grep "Key\ fingerprint" | sed 's/.*\=\ //' | tr -d "\ "
#gpg --keyserver hkp://keys.gnupg.net/ --fingerprint --recv-keys <list of key fingerprints here seperated by spaces>

# import some variables
source defaults.cfg

cd "$dldir"

rm -f "$result"

# put list of files in dldir into array a
a=( $(find . -name "*.asc" -type f) )

# check signatures in array
for var in "${a[@]}"
do
	  # i am getting tired of writing all this out
	  filename="$dldir${var##\.}"

          # just print the damn names!
          echo -ne "$filename"\\n >> "$result" 2>&1

	  # check the signature and write the result to a file silently
	  gpg --verify "$filename" >> "$result" 2>&1

	  # print whether it passed or not
	  # don't care if the signature is good -- only if its bad!
	  if [ "$?" != "0" ]; then
	  	echo "WARNING: $filename signature is bad!" #>> "$result" 2>&1
	  fi
done

# clean up and format the $result file
sed -e s/^gpg/\ \ \ \ \ gpg/ -e s/^Primary/\ \ \ \ \ Primary/ -e s@^/@\\n/@ < "$result"  > "$tmpdir"/waxonwaxoff
mv "$tmpdir"/waxonwaxoff "$result"
